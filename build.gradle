plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id "com.github.spotbugs" version "5.0.13"
	id 'eclipse'
	id 'jacoco'
}
//patient
group = 'com.medi'
version = '0.0.1-snapshot'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-actuator:2.7.5'
	implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation 'org.slf4j:slf4j-nop:2.0.3'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.12.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

spotbugs {
	toolVersion = '4.7.3'
	ignoreFailures = false
}

jacoco {
	toolVersion = "0.8.8"
	reportsDirectory = layout.buildDirectory.dir('$buildDir/target/site/jacoco')
}

tasks.register('applicationCodeCoverageReport', JacocoReport) {
	sourceSets sourceSets.main
}

jacocoTestReport {
	reports {
		xml.enabled true
		csv.enabled false
		html.destination file("${buildDir}/target/site/jacoco/index")
	}
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.9
			}
		}
	}
}